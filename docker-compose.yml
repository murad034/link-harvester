version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: link_harvester
    container_name: link_harvester
    restart: always
    tty: true
    volumes:
      - .:/var/www/html
      #- "/mnt/d/laragon/www/interview/link-harvester:/var/www/html"
    ports:
      - "8081:80"
      - "443:443"
    depends_on:
      - db
      - redis
    networks:
      - app-network
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - CACHE_STORE=${CACHE_STORE}
      - SESSION_DRIVER=${SESSION_DRIVER}

  # configure the database service
  db:
    image: mysql:8.0.17
    container_name: link_harvester_db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    tty: true
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_PASSWORD}
      # SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: link_harvester_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  redisadmin:
    image: erikdubbelboer/phpredisadmin
    container_name: link_harvester_redisadmin
    ports:
      - "8082:80"
    environment:
      REDIS_1_HOST: link_harvester_redis
      REDIS_1_PORT: 6379
    depends_on:
      - redis
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
